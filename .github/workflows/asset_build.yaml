name: opencc_assets

permissions:
  contents: write

on:
  push:
    branches: [ t/assets ]
    paths:
      - .github/workflows/asset_build.yaml
      - opencc-version
    tags:
      - 'prebuild-assets-*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        arch: [x86, arm64]

    runs-on: ${{ matrix.os }}-latest

    steps:
    - uses: actions/checkout@v4

    - uses: dart-lang/setup-dart@v1
      with:
        sdk: stable

    - name: Install native toolchains
      run: sudo apt-get update && sudo apt-get install clang-15
      if: ${{ matrix.os == 'ubuntu' }}

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch == 'arm64' && 'amd64_arm64' || 'amd64_x86' }}
      if: ${{ matrix.os == 'windows' }}

    - run: git clone https://github.com/BYVoid/OpenCC.git lib-src --depth 1 -b $(cat opencc-version)
    - run: |
        mkdir lib-src/build
        mkdir assets

    - name: Build ${{ matrix.os }} host
      working-directory: lib-src/build
      run: |
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON
        cmake --build . --config Release --target Dictionaries

    - name: Pack assets archive
      working-directory: assets
      env:
        EXT: ${{ matrix.os == 'ubuntu' && 'so' || (matrix.os == 'macos' && 'dylib' || 'dll') }}
        LIB_DIR: ${{ matrix.os == 'windows' && '/Release' || '' }}
        CMD: ${{ matrix.os == 'windows' && 'tar.exe -cf' || 'zip -r' }}
      run: |
        ls ../lib-src/build/src
        mv ../lib-src/build/src${LIB_DIR}/*.$EXT .
        mkdir opencc
        mv ../lib-src/build/data/*.ocd2 opencc
        mv ../lib-src/data/config/*.json opencc
        $CMD assets.zip *.$EXT opencc

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: opencc-${{ matrix.os == 'ubuntu' && 'linux' || matrix.os }}-${{ matrix.arch }}
        path: |
          assets/*.zip
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download assets
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: assets

      - name: Display structure of downloaded assets
        run: ls -R assets

      - name: Release
        uses: softprops/action-gh-release@v2
        # if: startsWith(github.ref, 'refs/tags/prebuild-assets')
        with:
          files: 'assets/**'
          fail_on_unmatched_files: true
