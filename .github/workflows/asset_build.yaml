name: opencc_assets

permissions:
  contents: write

on:
  push:
    branches: [ t/assets ]
    paths:
      - .github/workflows/asset_build.yaml
      - tools/compile.sh
    tags:
      - 'opencc-v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [linux, macos, windows]
        arch: [x64, arm64]
        include:
          - os: linux
            arch: x64
            runner: ubuntu-latest
          - os: linux
            arch: arm64
            runner: ubuntu-22.04-arm

          - os: windows
            arch: x64
            runner: windows-latest
          - os: windows
            arch: arm64
            runner: windows-latest

          - os: macos
            arch: x64
            runner: macos-13
        exclude:
          - os: macos
            arch: arm64
#           runner: macos-13-xlarge

    runs-on: ${{ matrix.runner }}

    steps:
    - uses: actions/checkout@v4

    - uses: dart-lang/setup-dart@v1
      with:
        sdk: 3.10.0-14.0.dev

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch == 'arm64' && 'amd64_arm64' || 'amd64_x86' }}
      if: ${{ matrix.os == 'windows' }}

    - run: dart pub get
    - run: git clone https://gitlab.com/lindeer/opencc.git lib-src --depth 1 -b $(cat opencc-version)
    - run: dart tools/mkdir.dart lib-src/build assets

    - name: Build in Docker container
      if: ${{ matrix.os == 'linux'}}
      run: |
        docker pull ubuntu:18.04
        docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          ubuntu:18.04 /bin/bash tools/compile.sh

    - name: Build ${{ matrix.os }}-${{ matrix.arch }} host
      working-directory: lib-src/build
      if: ${{ matrix.os != 'linux'}}
      run: |
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON
        cmake --build . --config Release --target Dictionaries

    - name: Pack assets archive
      working-directory: assets
      env:
        EXT: ${{ matrix.os == 'macos' && 'dylib' || (matrix.os == 'windows' && 'dll' || 'so') }}
        LIB_DIR: ../lib-src/build/src${{ matrix.os == 'windows' && '/Release' || '' }}
      run: |
        ls -l ${{ env.LIB_DIR }}
        cp ${{ env.LIB_DIR }}/*.${{ env.EXT }} .
        dart ../tools/mkdir.dart opencc
        cp ../lib-src/build/data/*.ocd2 opencc
        cp ../lib-src/data/config/*.json opencc
        ls -R .
        dart ../tools/zip.dart opencc-${{ matrix.os }}-${{ matrix.arch }}.zip *.${{ env.EXT }} opencc

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: opencc-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          assets/*.zip
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download assets
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: assets

      - name: Display structure of downloaded assets
        run: ls -R assets

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/opencc-v')
        with:
          files: 'assets/**'
          fail_on_unmatched_files: true
